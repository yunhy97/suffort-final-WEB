package com.sample.web.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.sample.service.CommunityService;
import com.sample.service.CompBoardService;
import com.sample.service.UserBoardService;
import com.sample.web.dto.CommunitiesDetail;
import com.sample.web.dto.CompBoardDto;
import com.sample.web.dto.UserBoardDto;
import com.sample.web.vo.Users;

@Controller
public class HomeController {

	@Autowired
	private UserBoardService userBoardService;
	
	@Autowired
	private CompBoardService compBoardService;
	
	@Autowired
	private CommunityService communityService;
	
	@RequestMapping("/home.do")
	public String home() {
		
		return "home";
	}
	
	/*
	@RequestMapping(value = "/searchList.do", method = RequestMethod.GET)
	public String search(@RequestParam("keyword") String keyword, Model model) {
		
		System.out.println("검색 키워드: " + keyword);
		
		List<UserBoardDto> userBoards = userBoardService.getAllUserBoardByKeyword(keyword);
		List<CompBoardDto> compBoards  = compBoardService.getAllCompBoardByKeword(keyword);
		// community 는 작업중이라 대충 써논것. 수정필요
		//List<CommunitiesDetail> commuBoards  = communityService.getAllCommunitiesDetailByKeyword(keyword);
		System.out.println(userBoards.size());
		System.out.println(compBoards.size());
		
		model.addAttribute("userKeyword", userBoards);
		model.addAttribute("compKeyword", compBoards);
		model.addAttribute("userCount", userBoards.size());
		model.addAttribute("compCount", compBoards.size());
		// community 는 작업중이라 대충 써논것. 수정필요
		//model.addAttribute("pp", commuBoards);
		
		return "list";
	}
	*/
	@GetMapping("/more.do")
	@ResponseBody
	public Map<String, Object> more(@RequestParam(value="pageNo", required=false, defaultValue="1") int pageNo,
			@RequestParam(value="tagNo",required=false,defaultValue="-1") long tagNo,
			@RequestParam(value="keyword", required=false) String keyword, Model model, Users users) {
		System.out.println(keyword);
		Map<String, Object> paramMap = new HashMap<String, Object>();
		
		int rows = 6;
		int offset = (pageNo - 1)*rows + 1;
		paramMap.put("offset", offset);
		
		if (tagNo != -1) {
			paramMap.put("tagNo", tagNo);			
		}
		paramMap.put("access", users != null ? true : false);

		if (keyword != null) {
			paramMap.put("keyword", keyword);
		}

		Map<String, Object> result = userBoardService.searchUserBoard(paramMap);	// {items:[board, board, ...], totalRows:38}
		int totalRows = (int) result.get("totalRows");
		int totalPages = (int) Math.ceil((double)totalRows/rows);
		result.put("totalPages", totalPages);	// {items:[board, board, ...], totalRows:38, totalPages:7}
		
		if (users != null) {
			result.put("logined", true);
			result.put("type", "user");
		} else {
			result.put("logined", false);
		}
		System.out.println(result);
		
		return result;
	}
	@GetMapping("/search.do")
	public String search() {

		return "list";
	}
}
