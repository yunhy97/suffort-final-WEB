<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="/resources/bootstrap/css/bootstrap.min.css">
<!-- 유저 차트 링크 -->
<script src="https://cdn.amcharts.com/lib/4/core.js"></script>
<script src="https://cdn.amcharts.com/lib/4/charts.js"></script>
<script src="https://cdn.amcharts.com/lib/4/themes/animated.js"></script>
<title>Admin User List</title>
<style type="text/css">
	.card {
		margin-top : 10px;
	}
	#chartdiv {
  		width: 100%;
  		height: 400px;
	}
</style>
</head>
<body>
<div class="container-fluid">
	<div class="header">
		<div class="row">
			<div class="col-12 bg-light">
				<%@ include file="../common/navbar.jsp" %>		
			</div>
		</div>
	</div>

	<div class="body" style="margin-top: 72px;">
		<div class="row">
			<div class="col-2 bg-light">
				<%@ include file="../common/sidebar-admin.jsp" %>
			</div>
			<div class="col-10" id="content-div">
			
				<!-- 전체 유저리스트 조회 -->
				<div class="row">
					<div class="col-12" >
						<div class="card" >
							<div class="card-header">
								<div class="row">
									<div class="col">
										<h6>유저리스트</h6>
									</div>
									<div class="col-auto">
										<select id="userSelect" class="custom-select custom-select-sm ">
											<option>가입일</option>
											<option>신고</option>
											<option>좋아요</option>
											<option>게시글</option>
											<option>탈퇴</option>
										</select>
									</div>
								</div>
							</div>
							<div class="card-body">
								<table class="table table-borderless table-hover">
								<!-- 
								<colgroup>
									<col width="20">
									<col width="40">
									<col width="15">
									<col width="15">
									<col width="10">
								</colgroup>
								 -->
								<thead class="text-center">
									<tr>
										<th>프로필</th>
										<th>번호</th>
										<th>ID</th>
										<th>이름</th>
										<th>생년월일</th>
										<th>깃주소</th>
										<th>이메일</th>
										<th>게시물</th>
										<th>좋아요</th>
										<th>신고</th>
										<th>가입일</th>
										<th>활동</th>
									</tr>
								</thead>
								<tbody class="text-center" id = "user-list">
								
								</tbody>
							</table>
							</div>
							<div class="card-footer">
								<div class="row">
									<div class="col text-center">
										<h6>더 보기></h6>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				
				<!-- 유저 정지/차트 조회 -->
				<div class="row">
				
					<!-- 정지된 유저 조회 -->
					<div class="col-5">
						<div class="card">
							<div class="card-header">
								<div class="row">
									<div class="col">
										<h6>정지 유저</h6>
									</div>
									<div class="col-auto">
										<select id="blockUserSelect" class="custom-select custom-select-sm">
											<option>신고</option>
											<option>가입일</option>
											<option>게시물</option>
										</select>
									</div>
								</div>
							</div>
							<div class="card-body">
								<table class="table table-borderless text-center" >
									<thead>
										<tr>
											<th></th>
											<th>ID</th>
											<th>이름</th>
											<th>신고</th>
											<th>신고 게시물</th>
											<th>가입일</th>
											<th></th>
										</tr>
									</thead>
									<tbody class="text-center" id = "user-block-list">
									
									</tbody>
								</table>
							</div>
							<div class="card-footer">
								<div class="row">
									<div class="col text-center">
										<h6>페이지 12345</h6>
									</div>
								</div>
							</div>
						</div>
					</div>
					
					<!-- 월별 유저 조회 -->
					<div class="col-7">
						<div class="card">
							<div class="card-header">
								<div class="row">
									<div class="col">
										<h6>차트</h6>
									</div>
									<div class="col-auto">
										<select class="custom-select custom-select-sm">
											<option>1월</option>
											<option>2월</option>
											<option>...</option>
										</select>
									</div>
								</div>
							</div>
							<div class="card-body">
								<div id="chartdiv"></div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<!-- jQuery, bootstrap -->
<script type="text/javascript" src="/resources/jquery/jquery.min.js"></script>	
<script type="text/javascript" src="/resources/bootstrap/js/bootstrap.min.js"></script>
<script type="text/javascript">
userList();
function userList() {
	$.ajax({
		type:"get",
		url:"/manager/userlist.do",
		success:function(result) {
			console.log(result);
			
			$.each(result, function(index, user) {
				
				var row = "";
				if (user.actived == 'Y') {
					row += "<tr class='text-dark font-weight-bold'>"
				} else if (user.actived == 'N'){
					row += "<tr class='text-muted'>"
				}
				row += "<td>"+user.img+"</td>"
				row += "<td>"+user.no+"</td>"
				row += "<td>"+user.id+"</td>"
				row += "<td>"+user.name+"</td>"
				row += "<td>"+user.birth+"</td>"
				row += "<td>"+user.gitAddr+"</td>"
				row += "<td>"+user.email+"</td>"
				row += "<td>"+user.boardCnt+"</td>"
				row += "<td>"+user.sumLike+"</td>"
				row += "<td>"+user.sumWarning+"</td>"
				row += "<td>"+user.registeredDate+"</td>"
				if (user.actived == 'Y') {
					row +="<td><button class='btn btn-danger btn-sm' data-no="+user.no+" data-actived='N'>정지</button></td>";
				}
				if (user.actived == 'N') {
					row += "<td><button class='btn btn-success btn-sm' data-no="+user.no+" data-actived='Y'>활성</button></td>"
				}
				row +="</tr>";
				
				$("#user-list").append(row);
			})
		}
	})
}

$("#user-list").on("click", "button", function() {
	var $button = $(this);
	
	var userNo = $(this).data("no");
	var userActived = $(this).attr("data-actived");
	$.ajax({
		type:"get",
		url: "/manager/changeUserActive.do",
		data: {no: userNo, actived: userActived},
		dataType: "json",
		success:function(result) {
			console.log(result);
			if (result.actived == 'Y') {
				$button.removeClass("btn-success").addClass("btn-danger")
				.attr('data-actived', 'N').text("정지");
				$button.parents('tr').removeClass('text-muted').addClass('text-dark font-weight-bold')
			}
			if (result.actived == 'N') {
				$button.removeClass("btn-danger").addClass("btn-success")
				.attr('data-actived', 'Y').text("활성");
				$button.parents('tr').removeClass('text-dark').removeClass('font-weight-bold').addClass('text-muted')
			}
		}
	})
})


am4core.ready(function() {

	// Themes begin
	am4core.useTheme(am4themes_animated);
	// Themes end

	// Create chart instance
	var chart = am4core.create("chartdiv", am4charts.XYChart);

	//

	// Increase contrast by taking evey second color
	chart.colors.step = 2;

	// Add data
	chart.data = generateChartData();

	// Create axes
	var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
	dateAxis.renderer.minGridDistance = 50;

	// Create series
	function createAxisAndSeries(field, name, opposite, bullet) {
	  var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
	  if(chart.yAxes.indexOf(valueAxis) != 0){
	  	valueAxis.syncWithAxis = chart.yAxes.getIndex(0);
	  }
	  
	  var series = chart.series.push(new am4charts.LineSeries());
	  series.dataFields.valueY = field;
	  series.dataFields.dateX = "date";
	  series.strokeWidth = 2;
	  series.yAxis = valueAxis;
	  series.name = name;
	  series.tooltipText = "{name}: [bold]{valueY}[/]";
	  series.tensionX = 0.8;
	  series.showOnInit = true;
	  
	  var interfaceColors = new am4core.InterfaceColorSet();
	  
	  switch(bullet) {
	    case "triangle":
	      var bullet = series.bullets.push(new am4charts.Bullet());
	      bullet.width = 12;
	      bullet.height = 12;
	      bullet.horizontalCenter = "middle";
	      bullet.verticalCenter = "middle";
	      
	      var triangle = bullet.createChild(am4core.Triangle);
	      triangle.stroke = interfaceColors.getFor("background");
	      triangle.strokeWidth = 2;
	      triangle.direction = "top";
	      triangle.width = 12;
	      triangle.height = 12;
	      break;
	    case "rectangle":
	      var bullet = series.bullets.push(new am4charts.Bullet());
	      bullet.width = 10;
	      bullet.height = 10;
	      bullet.horizontalCenter = "middle";
	      bullet.verticalCenter = "middle";
	      
	      var rectangle = bullet.createChild(am4core.Rectangle);
	      rectangle.stroke = interfaceColors.getFor("background");
	      rectangle.strokeWidth = 2;
	      rectangle.width = 10;
	      rectangle.height = 10;
	      break;
	    default:
	      var bullet = series.bullets.push(new am4charts.CircleBullet());
	      bullet.circle.stroke = interfaceColors.getFor("background");
	      bullet.circle.strokeWidth = 2;
	      break;
	  }
	  
	  valueAxis.renderer.line.strokeOpacity = 1;
	  valueAxis.renderer.line.strokeWidth = 2;
	  valueAxis.renderer.line.stroke = series.stroke;
	  valueAxis.renderer.labels.template.fill = series.stroke;
	  valueAxis.renderer.opposite = opposite;
	}

	createAxisAndSeries("visits", "Visits", false, "circle");
	createAxisAndSeries("views", "Views", true, "triangle");
	createAxisAndSeries("hits", "Hits", true, "rectangle");

	// Add legend
	chart.legend = new am4charts.Legend();

	// Add cursor
	chart.cursor = new am4charts.XYCursor();

	// generate some random data, quite different range
	function generateChartData() {
	  var chartData = [];
	  var firstDate = new Date();
	  firstDate.setDate(firstDate.getDate() - 100);
	  firstDate.setHours(0, 0, 0, 0);

	  var visits = 1600;
	  var hits = 2900;
	  var views = 8700;

	  for (var i = 0; i < 15; i++) {
	    // we create date objects here. In your data, you can have date strings
	    // and then set format of your dates using chart.dataDateFormat property,
	    // however when possible, use date objects, as this will speed up chart rendering.
	    var newDate = new Date(firstDate);
	    newDate.setDate(newDate.getDate() + i);

	    visits += Math.round((Math.random()<0.5?1:-1)*Math.random()*10);
	    hits += Math.round((Math.random()<0.5?1:-1)*Math.random()*10);
	    views += Math.round((Math.random()<0.5?1:-1)*Math.random()*10);

	    chartData.push({
	      date: newDate,
	      visits: visits,
	      hits: hits,
	      views: views
	    });
	  }
	  return chartData;
	}

	}); // end am4core.ready()


</script>
</body>
</html>